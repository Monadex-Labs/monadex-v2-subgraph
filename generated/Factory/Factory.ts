// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class FeeTierForTokenPairUpdated extends ethereum.Event {
  get params(): FeeTierForTokenPairUpdated__Params {
    return new FeeTierForTokenPairUpdated__Params(this);
  }
}

export class FeeTierForTokenPairUpdated__Params {
  _event: FeeTierForTokenPairUpdated;

  constructor(event: FeeTierForTokenPairUpdated) {
    this._event = event;
  }

  get tokenA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get feeTier(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenB(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProtocolFeeChanged extends ethereum.Event {
  get params(): ProtocolFeeChanged__Params {
    return new ProtocolFeeChanged__Params(this);
  }
}

export class ProtocolFeeChanged__Params {
  _event: ProtocolFeeChanged;

  constructor(event: ProtocolFeeChanged) {
    this._event = event;
  }

  get protocolFee(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ProtocolTeamMultisigChanged extends ethereum.Event {
  get params(): ProtocolTeamMultisigChanged__Params {
    return new ProtocolTeamMultisigChanged__Params(this);
  }
}

export class ProtocolTeamMultisigChanged__Params {
  _event: ProtocolTeamMultisigChanged;

  constructor(event: ProtocolTeamMultisigChanged) {
    this._event = event;
  }

  get protocolTeamMultisig(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenSupportChanged extends ethereum.Event {
  get params(): TokenSupportChanged__Params {
    return new TokenSupportChanged__Params(this);
  }
}

export class TokenSupportChanged__Params {
  _event: TokenSupportChanged;

  constructor(event: TokenSupportChanged) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isBlacklisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Factory__getFeeForAllFeeTiersResultValue0Struct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class Factory__getFeeForTierResultValue0Struct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class Factory__getProtocolFeeResultValue0Struct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class Factory__getTokenPairToFeeResultValue0Struct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  deployPool(_tokenA: Address, _tokenB: Address): Address {
    let result = super.call(
      "deployPool",
      "deployPool(address,address):(address)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );

    return result[0].toAddress();
  }

  try_deployPool(
    _tokenA: Address,
    _tokenB: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployPool",
      "deployPool(address,address):(address)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllPools(): Array<Address> {
    let result = super.call("getAllPools", "getAllPools():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getAllPools(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getAllPools", "getAllPools():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getFeeForAllFeeTiers(): Array<Factory__getFeeForAllFeeTiersResultValue0Struct> {
    let result = super.call(
      "getFeeForAllFeeTiers",
      "getFeeForAllFeeTiers():((uint256,uint256)[5])",
      [],
    );

    return result[0].toTupleArray<Factory__getFeeForAllFeeTiersResultValue0Struct>();
  }

  try_getFeeForAllFeeTiers(): ethereum.CallResult<
    Array<Factory__getFeeForAllFeeTiersResultValue0Struct>
  > {
    let result = super.tryCall(
      "getFeeForAllFeeTiers",
      "getFeeForAllFeeTiers():((uint256,uint256)[5])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Factory__getFeeForAllFeeTiersResultValue0Struct>(),
    );
  }

  getFeeForTier(_feeTier: BigInt): Factory__getFeeForTierResultValue0Struct {
    let result = super.call(
      "getFeeForTier",
      "getFeeForTier(uint256):((uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_feeTier)],
    );

    return changetype<Factory__getFeeForTierResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getFeeForTier(
    _feeTier: BigInt,
  ): ethereum.CallResult<Factory__getFeeForTierResultValue0Struct> {
    let result = super.tryCall(
      "getFeeForTier",
      "getFeeForTier(uint256):((uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_feeTier)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Factory__getFeeForTierResultValue0Struct>(value[0].toTuple()),
    );
  }

  getProtocolFee(): Factory__getProtocolFeeResultValue0Struct {
    let result = super.call(
      "getProtocolFee",
      "getProtocolFee():((uint256,uint256))",
      [],
    );

    return changetype<Factory__getProtocolFeeResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getProtocolFee(): ethereum.CallResult<Factory__getProtocolFeeResultValue0Struct> {
    let result = super.tryCall(
      "getProtocolFee",
      "getProtocolFee():((uint256,uint256))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Factory__getProtocolFeeResultValue0Struct>(value[0].toTuple()),
    );
  }

  getProtocolTeamMultisig(): Address {
    let result = super.call(
      "getProtocolTeamMultisig",
      "getProtocolTeamMultisig():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getProtocolTeamMultisig(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getProtocolTeamMultisig",
      "getProtocolTeamMultisig():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTokenPairToFee(
    _tokenA: Address,
    _tokenB: Address,
  ): Factory__getTokenPairToFeeResultValue0Struct {
    let result = super.call(
      "getTokenPairToFee",
      "getTokenPairToFee(address,address):((uint256,uint256))",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );

    return changetype<Factory__getTokenPairToFeeResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getTokenPairToFee(
    _tokenA: Address,
    _tokenB: Address,
  ): ethereum.CallResult<Factory__getTokenPairToFeeResultValue0Struct> {
    let result = super.tryCall(
      "getTokenPairToFee",
      "getTokenPairToFee(address,address):((uint256,uint256))",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Factory__getTokenPairToFeeResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getTokenPairToPool(_tokenA: Address, _tokenB: Address): Address {
    let result = super.call(
      "getTokenPairToPool",
      "getTokenPairToPool(address,address):(address)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );

    return result[0].toAddress();
  }

  try_getTokenPairToPool(
    _tokenA: Address,
    _tokenB: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTokenPairToPool",
      "getTokenPairToPool(address,address):(address)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isSupportedToken(_token: Address): boolean {
    let result = super.call(
      "isSupportedToken",
      "isSupportedToken(address):(bool)",
      [ethereum.Value.fromAddress(_token)],
    );

    return result[0].toBoolean();
  }

  try_isSupportedToken(_token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSupportedToken",
      "isSupportedToken(address):(bool)",
      [ethereum.Value.fromAddress(_token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  precalculatePoolAddress(_tokenA: Address, _tokenB: Address): Address {
    let result = super.call(
      "precalculatePoolAddress",
      "precalculatePoolAddress(address,address):(address)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );

    return result[0].toAddress();
  }

  try_precalculatePoolAddress(
    _tokenA: Address,
    _tokenB: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "precalculatePoolAddress",
      "precalculatePoolAddress(address,address):(address)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _protocolTeamMultisig(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _protocolFee(): ConstructorCall_protocolFeeStruct {
    return changetype<ConstructorCall_protocolFeeStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _feeTiers(): Array<ConstructorCall_feeTiersStruct> {
    return this._call.inputValues[2].value.toTupleArray<ConstructorCall_feeTiersStruct>();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_protocolFeeStruct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class ConstructorCall_feeTiersStruct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class DeployPoolCall extends ethereum.Call {
  get inputs(): DeployPoolCall__Inputs {
    return new DeployPoolCall__Inputs(this);
  }

  get outputs(): DeployPoolCall__Outputs {
    return new DeployPoolCall__Outputs(this);
  }
}

export class DeployPoolCall__Inputs {
  _call: DeployPoolCall;

  constructor(call: DeployPoolCall) {
    this._call = call;
  }

  get _tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DeployPoolCall__Outputs {
  _call: DeployPoolCall;

  constructor(call: DeployPoolCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class LockPoolCall extends ethereum.Call {
  get inputs(): LockPoolCall__Inputs {
    return new LockPoolCall__Inputs(this);
  }

  get outputs(): LockPoolCall__Outputs {
    return new LockPoolCall__Outputs(this);
  }
}

export class LockPoolCall__Inputs {
  _call: LockPoolCall;

  constructor(call: LockPoolCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LockPoolCall__Outputs {
  _call: LockPoolCall;

  constructor(call: LockPoolCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBlackListedTokenCall extends ethereum.Call {
  get inputs(): SetBlackListedTokenCall__Inputs {
    return new SetBlackListedTokenCall__Inputs(this);
  }

  get outputs(): SetBlackListedTokenCall__Outputs {
    return new SetBlackListedTokenCall__Outputs(this);
  }
}

export class SetBlackListedTokenCall__Inputs {
  _call: SetBlackListedTokenCall;

  constructor(call: SetBlackListedTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isBlacklisted(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetBlackListedTokenCall__Outputs {
  _call: SetBlackListedTokenCall;

  constructor(call: SetBlackListedTokenCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCall extends ethereum.Call {
  get inputs(): SetProtocolFeeCall__Inputs {
    return new SetProtocolFeeCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeCall__Outputs {
    return new SetProtocolFeeCall__Outputs(this);
  }
}

export class SetProtocolFeeCall__Inputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }

  get _protocolFee(): SetProtocolFeeCall_protocolFeeStruct {
    return changetype<SetProtocolFeeCall_protocolFeeStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetProtocolFeeCall__Outputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCall_protocolFeeStruct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class SetProtocolTeamMultisigCall extends ethereum.Call {
  get inputs(): SetProtocolTeamMultisigCall__Inputs {
    return new SetProtocolTeamMultisigCall__Inputs(this);
  }

  get outputs(): SetProtocolTeamMultisigCall__Outputs {
    return new SetProtocolTeamMultisigCall__Outputs(this);
  }
}

export class SetProtocolTeamMultisigCall__Inputs {
  _call: SetProtocolTeamMultisigCall;

  constructor(call: SetProtocolTeamMultisigCall) {
    this._call = call;
  }

  get _protocolTeamMultisig(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProtocolTeamMultisigCall__Outputs {
  _call: SetProtocolTeamMultisigCall;

  constructor(call: SetProtocolTeamMultisigCall) {
    this._call = call;
  }
}

export class SetTokenPairFeeCall extends ethereum.Call {
  get inputs(): SetTokenPairFeeCall__Inputs {
    return new SetTokenPairFeeCall__Inputs(this);
  }

  get outputs(): SetTokenPairFeeCall__Outputs {
    return new SetTokenPairFeeCall__Outputs(this);
  }
}

export class SetTokenPairFeeCall__Inputs {
  _call: SetTokenPairFeeCall;

  constructor(call: SetTokenPairFeeCall) {
    this._call = call;
  }

  get _tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeTier(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetTokenPairFeeCall__Outputs {
  _call: SetTokenPairFeeCall;

  constructor(call: SetTokenPairFeeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockPoolCall extends ethereum.Call {
  get inputs(): UnlockPoolCall__Inputs {
    return new UnlockPoolCall__Inputs(this);
  }

  get outputs(): UnlockPoolCall__Outputs {
    return new UnlockPoolCall__Outputs(this);
  }
}

export class UnlockPoolCall__Inputs {
  _call: UnlockPoolCall;

  constructor(call: UnlockPoolCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnlockPoolCall__Outputs {
  _call: UnlockPoolCall;

  constructor(call: UnlockPoolCall) {
    this._call = call;
  }
}
